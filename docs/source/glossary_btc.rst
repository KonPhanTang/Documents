# Glossary

## 51 percent attack
**Majority attack**

ความสามารถของบุคคลที่ควบคุมอัตราแฮชของเครือข่ายส่วนใหญ่ ในการแก้ไขประวัติการทำธุรกรรม และ ป้องกันไม่ให้มีการยืนยันธุรกรรมใหม่

**Address**

แฮชขนาด 20 ไบต์ ที่จัดรูปแบบโดยใช้ base58check เพื่อสร้างที่อยู่ Bitcoin แบบ P2PKH หรือ P2SH ปัจจุบันผู้ใช้เป็นวิธี แลกเปลี่ยนข้อมูลการชำระเงิน ที่พบได้บ่อยที่สุด

**NOTE** : ระวังสับสนกับ : IP Address

**Base58check**

วิธีการที่ใช้ใน Bitcoin สำหรับการแปลงแฮช 160 บิตเป็นที่อยู่ P2PKH และ P2SH ยังใช้ในส่วนอื่นๆ ของ Bitcoin เช่นการเข้ารหัสคีย์ส่วนตัวสำหรับการสำรองข้อมูลในรูปแบบ WIP ไม่เหมือนกับการใช้งาน base58 อื่นๆ

**NOTE** : ระวังสับสนกับ : P2PKH Address, P2SH Address, IP Address

**Block**

ธุรกรรมอย่างน้อยหนึ่งรายการ นำหน้าด้วย **ส่วนหัวของบล็อก** และ **ป้องกันโดยหลักฐานการทำงาน** บล็อก คือ **ข้อมูลที่เก็บไว้ในบล็อกเชน**

## Block chain
**Best block chain**

กลุ่มของ บล็อก ที่มีแต่ละบล็อก ที่อ้างอิงถึงบล็อกที่อยู่ข้างหน้า ห่วงโซ่ที่ยากที่สุดในการสร้างใหม่ คือ ห่วงโซ่บล็อกที่ดีที่สุด

**NOTE** : ระวังสับสนกับ : Header chain

## Block header
**Header**

Header ขนาด 80 ไบต์ที่เป็นของบล็อกเดียวซึ่งถูกแฮชซ้ำๆ เพื่อสร้างหลักฐานการทำงาน

## Height
**Block height**

จำนวนบล็อกที่อยู่ก่อนหน้าบล็อกหนึ่งๆ ในบล็อกเชน ตัวอย่างเช่น บล็อกกำเนิดมี Block height เป็นศูนย์เนื่องจาก บล็อก 0 นำหน้า

**Block reward**

จำนวนเงินที่ผู้ขุดอาจเรียกร้องเป็นรางวัลสำหรับการสร้างบล็อก เท่ากับผลรวมของเงินอุดหนุนการบล็อก (ซาโตชิที่พร้อมใช้งานใหม่) บวกกับค่าธรรมเนียมธุรกรรมที่ชำระโดยธุรกรรมที่รวมอยู่ในบล็อก

**NOTE** : ระวังสับสนกับ : Block subsidy (เงินอุดหนุนบล็อค), Transaction fees (ค่าธรรมเนียมการทำธุรกรรม)

**Maximum Block Size**

ขนาดสูงสุดของบล็อกตามกฎฉันทามติ ขีดจำกัดขนาดบล็อกปัจจุบันคือ 4 ล้าน weight units (1 ล้าน vbytes)

**NOTE** : อย่าให้สับสนกับ : Block, Blockchain, Blockchain size

**Blocks-first sync**

การซิงโครไนซ์บล็อกเชนโดยการดาวน์โหลดแต่ละบล็อกจากเพียร์แล้วตรวจสอบความถูกต้อง

**NOTE** : ระวังสับสนกับ : Headers-first sync

**Bloom filter**

ตัวกรองที่ใช้โดยไคลเอนต์ SPV เป็นหลัก เพื่อขอเฉพาะธุรกรรมที่ตรงกัน และ บล็อก Merkle จาก full node

**NOTE** : ระวังสับสนกับ : Bloom filter (ศัพท์วิทยาศาสตร์คอมพิวเตอร์ทั่วไป ซึ่งตัวกรองบลูมของ Bitcoin เป็นการใช้งานเฉพาะ)

**Chain code**

ในกระเป๋าเงิน HD, คือ entropy 256 bits ที่เพิ่มลงใน public keys และ private keys เพื่อช่วยในการ generate secure child keys 

chain code หลักมักจะได้มาจาก seed key พร้อมกับ master private key

## Change address
**Change output**

ผลลัพธ์ในธุรกรรมที่ส่งคืน satoshis ให้กับผู้ใช้จ่าย จึงป้องกันมูลค่าอินพุตที่มากเกินไปไม่ให้ไปเป็นค่าธรรมเนียมการทำธุรกรรม

**NOTE** : ระวังสับสนกับ : ใช้ที่อยู่ซ้ำ

## Child key
**Child public key**

**Child private key**

ในกระเป๋าเงิน HD คีย์ที่ได้มาจาก parent key อาจเป็น public keys หรือ private keys ก็ได้ และ การได้มาของคีย์อาจต้องใช้ Chain code ด้วย

อย่าให้สับสนกับ : public keys (ได้มาจาก private key ไม่ใช่ parent key)

**Coinbase**

ฟิลด์พิเศษที่ใช้เป็นอินพุตเดียวสำหรับธุรกรรม **coinbase** coinbase อนุญาตให้อ้างสิทธิ์ Block reward และ ให้ข้อมูลโดยพลการได้มากถึง 100 ไบต์

**NOTE** : ระวังสับสนกับ : Coinbase transaction, Coinbase.com

## Coinbase transaction
**Generation transaction**

ธุรกรรมแรกในบล็อก สร้างขึ้นโดยนักขุดเสมอ โดยจะมีฐานเหรียญเดียว

**NOTE** : ระวังสับสนกับ : Coinbase (ส่วนเฉพาะของธุรกรรม coinbase)

**CompactSize**

ประเภทของ variable-length ที่ใช้กันทั่วไปในโปรโตคอล Bitcoin P2P และ Bitcoin serialized data structures ของ Bitcoin

**NOTE** : ระวังสับสนกับ : VarInt (ชนิดข้อมูล Bitcoin Core ใช้สำหรับจัดเก็บข้อมูลในเครื่อง), Compact (ชนิดข้อมูลที่ใช้สำหรับ nBits ในส่วนหัวของบล็อก)

**Compressed public key**

public key ECDSA ที่มีความยาวแค่ 33 ไบต์ แทนที่จะเป็น 65 ไบต์เหมือนของ public key ที่ไม่บีบอัด

## Confirmation score
**Confirmations**

**Confirmed transaction**

**Unconfirmed transaction**
คะแนนที่ระบุจำนวนบล็อก ในบล็อกเชนที่ดีที่สุดที่จะต้องแก้ไข เพื่อลบ หรือ แก้ไขธุรกรรมเฉพาะ ธุรกรรมที่ได้รับการยืนยันมีคะแนนการยืนยันตั้งแต่หนึ่งคะแนนขึ้นไป

**Consensus (ฉันทามติ)**

เมื่อหลายโหนด (โดยปกติคือโหนดส่วนใหญ่ในเครือข่าย) ทั้งหมดมีบล็อกเดียวกันในบล็อกเชนที่ดีที่สุดที่ได้รับการตรวจสอบในเครื่อง

เพื่อไม่ให้สับสนกับ : Social consensus (มักใช้ในการสนทนาระหว่างนักพัฒนาเพื่อระบุว่าคนส่วนใหญ่เห็นด้วยกับแผนเฉพาะ), Consensus rules (กฎที่อนุญาตให้โหนดรักษาฉันทามติ)

**Consensus rules (กฎฉันทามติ)**
กฎการตรวจสอบการบล็อกที่โหนดเต็มปฏิบัติตามเพื่อให้สอดคล้องกับโหนดอื่นๆ

**NOTE** : ระวังสับสนกับ : Consensus (จะเกิดอะไรขึ้นเมื่อโหนดปฏิบัติตามกฎฉันทามติเดียวกัน)

## Child pays for parent
**CPFP**

**Ancestor mining**

การเลือกธุรกรรมสำหรับการขุดไม่เพียงแต่ขึ้นอยู่กับค่าธรรมเนียมเท่านั้น แต่ยังขึ้นอยู่กับค่าธรรมเนียมของบรรพบุรุษ (ผู้ปกครอง) และลูกหลาน (ลูกหลาน) ด้วย

**NOTE** : ระวังสับสนกับ : Replace by Fee, RBF

## Denomination
**Bitcoins**

**Satoshis**

มูลค่า Bitcoin มักจะวัดเป็นเศษส่วน ของ bitcoin แต่บางครั้งก็วัดเป็นทวีคูณของ satoshi หนึ่ง bitcoin เท่ากับ 100,000,000 satoshis

**NOTE** : ระวังสับสนกับ : **Binary bits**,  หน่วยของข้อมูลที่มีค่าที่เป็นไปได้สองค่า

## Difficulty
**Network difficulty**

การหาบล็อกที่สัมพันธ์ กับ ความยากในการค้นหาบล็อกที่ง่ายที่สุด นั้นยากเพียงใด บล็อกที่ง่ายที่สุดที่เป็นไปได้มี difficulty ในการ proof-of-work เท่ากับ 1

**NOTE** : ระวังสับสนกับ : **Target threshold** (เกณฑ์เป้าหมาย) (ค่าที่ใช้คำนวณความยาก)

**DNS seed**

เซิร์ฟเวอร์ DNS ที่ส่งคืนที่อยู่ IP ของโหนดแบบเต็มบนเครือข่าย Bitcoin เพื่อช่วยในการค้นหาเพียร์

**NOTE** : ระวังสับสนกับ : **HD wallet seeds**

**Double spend**

ธุรกรรมที่ใช้อินพุตเดียวกัน กับ ธุรกรรมที่ broadcast transaction แล้ว ความพยายามที่จะทำซ้ำ การหลอกลวง หรือ การแปลงจะถูกตัดสิน เมื่อมีการบันทึกธุรกรรมเพียงรายการเดียวในบล็อคเชน

**Escrow contract (สัญญาจ้าง)**

ธุรกรรม ที่ผู้ใช้จ่าย และ ผู้รับ วางเงินในเอาต์พุต multisig 2-of-2 (หรือ m-of-n อื่น ๆ ) เพื่อไม่ให้ทั้งคู่ไม่สามารถใช้เงินได้จนกว่าพวกเขาจะพอใจกับผลลัพธ์ภายนอกบางอย่าง

## Extended key
**Public extended key (คีย์ขยายสาธารณะ)**

**Private extended key (คีย์ส่วนขยายส่วนตัว)**

ในบริบทของ HD wallets, public key หรือ private key ที่ขยายด้วย chain code เพื่อให้ได้รับ child keys

**Fork**

เมื่อบล็อกตั้งแต่สองบล็อกขึ้นไปมี block height ของบล็อกเท่ากัน ให้แยกบล็อกเชน โดยทั่วไปจะเกิดขึ้นเมื่อมี ผู้ขุดสองคนขึ้นไป พบบล็อกในเวลาเดียวกัน สามารถเกิดขึ้นได้เป็นส่วนหนึ่งของการโจมตี

**NOTE** : ระวังสับสนกับ : 
- **Hard fork** (การเปลี่ยนแปลงกฎฉันทามติที่ทำลายความปลอดภัยสำหรับโหนดที่ไม่อัปเกรด), 
- **Soft fork** (การเปลี่ยนแปลงกฎฉันทามติที่ทำให้ความปลอดภัยลดลงสำหรับโหนดที่ไม่อัปเกรด), 
- **Software fork** (เมื่อ นักพัฒนาอย่างน้อยหนึ่งคนพัฒนา codebase แยกจากผู้พัฒนารายอื่นอย่างถาวร), 
- **Git fork** (เมื่อนักพัฒนาอย่างน้อยหนึ่งคนพัฒนา codebase แยกจากผู้พัฒนารายอื่นชั่วคราว)

## Genesis block
**Block 0**

บล็อกแรกใน Bitcoin block chain

**NOTE** : ระวังสับสนกับ : **Generation transaction** (ธุรกรรมแรกในบล็อก)

**Hard fork**

ความแตกต่างถาวรในบล็อกเชน มักเกิดขึ้นเมื่อโหนดที่ไม่ได้อัปเกรด ไม่สามารถตรวจสอบบล็อกที่สร้างโดยโหนดที่อัปเกรดแล้ว ซึ่งเป็นไปตามกฎฉันทามติที่ใหม่กว่า

**NOTE** : ระวังสับสนกับ : 
- **Fork** (Fork ปกติที่โหนดทั้งหมด ปฏิบัติตามกฎฉันทามติเดียวกัน ดังนั้น Fork จะได้รับการแก้ไขเมื่อ ห่วงโซ่หนึ่งมีหลักฐานการทำงานมากกว่าที่อื่น), 
- **Soft fork** (ความแตกต่างชั่วคราวในบล็อกเชนที่เกิดจากการไม่ - โหนดที่อัปเกรดแล้วไม่เป็นไปตามกฎฉันทามติใหม่), 
- **Software fork** (เมื่อนักพัฒนาซอฟต์แวร์หนึ่งคนหรือมากกว่านั้นพัฒนา codebase แยกต่างหากจากผู้พัฒนารายอื่นอย่างถาวร), 
- **Git fork** (เมื่อนักพัฒนาอย่างน้อยหนึ่งรายพัฒนา codebase แยกจากผู้พัฒนารายอื่นเป็นการชั่วคราว

**Hardened extended key**

รูปแบบของ HD wallet extended keys มีเฉพาะ extended private key  ที่ **Hardened (เสริมความแข็ง)** เท่านั้น ที่จะสามารถรับ child keys ได้ ซึ่งจะช่วยป้องกันการประนีประนอมของ chain code plus และ private key ใดๆ จากการทำให้กระเป๋าเงินทั้งหมดตกอยู่ในความเสี่ยง

## HD protocol
**HD wallet**

การสร้างคีย์ Hierarchical Deterministic (HD) และโปรโตคอลการถ่ายโอน (BIP32) ซึ่งอนุญาตให้สร้างคีย์ย่อยจากคีย์หลักในลำดับชั้น กระเป๋าเงินที่ใช้โปรโตคอล HD เรียกว่า HD wallets

## HD wallet seed
**Root seed**

ค่าที่อาจสั้น แต่ใช้เป็น seed ในการสร้าง master private key และ master chain code สำหรับ HD wallet

**NOTE** : ระวังสับสนกับ : Mnemonic code / Mnemonic seed  (Root seed แบบไบนารีที่จัดรูปแบบเป็นคำ เพื่อให้มนุษย์สามารถถอดความ และ จดจำได้ง่ายขึ้น)

## Header chain
**Best header chain**

chain ของ block headers โดยแต่ละ header เชื่อมโยงกับ header ที่นำหน้า ห่วงโซ่ที่ยากที่สุดในการสร้างใหม่ คือ ห่วงโซ่ส่วนหัวที่ดีที่สุด (best header chain)

**NOTE** : ระวังสับสนกับ : Block chain

**Headers-first sync (การซิงค์ส่วนหัวเป็นอันดับแรก)**

การซิงโครไนซ์บล็อกเชน โดยดาวน์โหลด ส่วนหัวของบล็อก (block headers) ก่อนดาวน์โหลดบล็อกทั้งหมด

**NOTE** : ระวังสับสนกับ : Blocks-first sync (การซิงค์ครั้งแรกในบล็อก) (ดาวน์โหลดทั้งบล็อคทันทีโดยไม่ได้รับส่วนหัวก่อน)

## High-priority transaction
**Free transaction**

ธุรกรรมที่ไม่ต้องจ่ายค่าธรรมเนียมการทำธุรกรรม เนื่องจากข้อมูลที่ป้อนเข้ามานั้นไม่ได้ใช้งานนานพอที่จะสะสมลำดับความสำคัญจำนวนมากได้

**หมายเหตุ** : ผู้ขุดเลือกว่าจะยอมรับธุรกรรมฟรีหรือไม่

## Initial block download ดาวน์โหลดบล็อกเริ่มต้น
**IBD**

กระบวนการที่ใช้โดยโหนดใหม่ (หรือ โหนดแบบออฟไลน์ แบบยาว) เพื่อดาวน์โหลดบล็อกจำนวนมาก เพื่อให้ทันต่อท้ายบล็อกเชนที่ดีที่สุด

**NOTE** : ระวังสับสนกับ : Blocks-first sync (การซิงค์ครั้งแรกในบล็อก) (การซิงค์รวมถึงการรับบล็อกจำนวนเท่าใดก็ได้ IBD ใช้สำหรับบล็อกจำนวนมากเท่านั้น)

## Input
**TxIn**

อินพุตในธุรกรรมที่มี 3 ฟิลด์ : outpoint, signature script, และ sequence number 

**หมายเหตุ** : outpoint อ้างอิงผลลัพธ์ก่อนหน้า และ สคริปต์ลายเซ็นอนุญาตให้ใช้

**Internal byte order**

ลำดับมาตรฐานที่แสดงการแยกย่อยของแฮชเป็นสตริง ซึ่งเป็นรูปแบบเดียวกับที่ใช้ในบล็อกและธุรกรรมที่ต่อเนื่องกัน

อย่าให้สับสนกับ:ลำดับไบต์ RPC (โดยที่ลำดับไบต์ถูกกลับรายการ)

รายการสิ่งของ
ตัวระบุชนิดข้อมูลและแฮช ใช้เพื่อระบุธุรกรรมและบล็อกที่มีให้ดาวน์โหลดผ่านเครือข่าย Bitcoin P2P

อย่าให้สับสนกับ:ข้อความ Inv (หนึ่งในข้อความ P2P ที่ส่งสินค้าคงคลัง)

ล็อคไทม์
nLockTime
ส่วนหนึ่งของธุรกรรมที่ระบุเวลาที่เร็วที่สุดหรือบล็อกแรกสุดเมื่อธุรกรรมนั้นอาจถูกเพิ่มในบล็อกเชน

เมนเน็ต
เครือข่ายดั้งเดิมและเครือข่ายหลักสำหรับธุรกรรม Bitcoin ซึ่ง satoshis มีมูลค่าทางเศรษฐกิจที่แท้จริง

อย่าสับสนกับ: Testnet (เครือข่ายแบบเปิดที่คล้ายกับ mainnet มากโดยที่ satoshis ไม่มีค่า), Regtest (โหนดทดสอบส่วนตัวที่คล้ายกับ testnet)

ความอ่อนไหวของธุรกรรม
การเปลี่ยนแปลงของธุรกรรม
ความสามารถของใครบางคนในการเปลี่ยนแปลง (กลายพันธุ์) ธุรกรรมที่ไม่ได้รับการยืนยันโดยไม่ทำให้เป็นโมฆะ ซึ่งจะเปลี่ยน txid ของธุรกรรม ทำให้ธุรกรรมย่อยไม่ถูกต้อง

เพื่อไม่ให้สับสนกับ: BIP62 (ข้อเสนอสำหรับตัวเลือกธุรกรรมเวอร์ชันใหม่ที่ลดชุดของการกลายพันธุ์ที่รู้จักสำหรับธุรกรรมทั่วไป)

ซอฟต์โช๊คที่เปิดใช้งานคนขุดแร่
MASF
Soft Fork เปิดใช้งานโดยการส่งสัญญาณของคนงานเหมือง

อย่าให้สับสนกับ: User Activated Soft Fork (ซอฟต์ฟอร์กที่เปิดใช้งานโดยวันธงหรือการบังคับใช้โหนดแทนการส่งสัญญาณของคนงานเหมือง), ส้อม (ส้อมปกติที่โหนดทั้งหมดปฏิบัติตามกฎฉันทามติเดียวกัน ดังนั้นส้อมจะได้รับการแก้ไขเมื่อห่วงโซ่เดียว มีหลักฐานการทำงานมากกว่าที่อื่น), ฮาร์ดฟอร์ก (ไดเวอร์เจนซ์ถาวรในบล็อกเชนที่เกิดจากโหนดที่ไม่ได้อัพเกรดซึ่งไม่ปฏิบัติตามกฎฉันทามติใหม่), ซอฟต์ฟอร์ค (ไดเวอร์เจนซ์ชั่วคราวในบล็อกเชนที่เกิดจากโหนดที่ไม่ได้อัปเกรดไม่ปฏิบัติตาม กฎฉันทามติใหม่), Software fork (เมื่อนักพัฒนาอย่างน้อยหนึ่งคนพัฒนา codebase แยกจากผู้พัฒนารายอื่นอย่างถาวร), Git fork (เมื่อนักพัฒนาอย่างน้อยหนึ่งคนพัฒนา codebase แยกจากผู้พัฒนารายอื่นชั่วคราว

รหัสโซ่หลัก
มาสเตอร์คีย์ส่วนตัว
ใน HD wallets รหัสมาสเตอร์เชนและมาสเตอร์ไพรเวทคีย์เป็นข้อมูลสองชิ้นที่ได้มาจากรูทเมล็ดพันธุ์

Merkle block
Merkle Tree บางส่วนที่เชื่อมต่อธุรกรรมที่ตรงกับตัวกรอง Bloom กับ Merkle Root ของบล็อก

อย่าให้สับสนกับ:ข้อความ MerkleBlock (ข้อความโปรโตคอล P2P ที่ส่งบล็อกเมอร์เคิล)

Merkle root
โหนดรูทของต้นไม้เมอร์เคิล ซึ่งเป็นลูกหลานของคู่แฮชทั้งหมดในต้นไม้ ส่วนหัวของบล็อกต้องมี Merkle root ที่ถูกต้องซึ่งสืบเชื้อสายมาจากธุรกรรมทั้งหมดในบล็อกนั้น

อย่าให้สับสนกับ: Merkle tree (ต้นไม้ที่ Merkle root เป็นโหนด root), Merkle block (กิ่ง Merkle บางส่วนที่เชื่อมต่อรากกับใบไม้หนึ่งใบขึ้นไป [ธุรกรรม])

Merkle tree
ต้นไม้ที่สร้างขึ้นโดยการจับคู่ข้อมูล (ใบไม้) จากนั้นจับคู่และแฮชผลลัพธ์จนกว่าจะเหลือแฮชเดียว นั่นคือ Merkle root ใน Bitcoin ใบไม้มักจะทำธุรกรรมจากบล็อกเดียว

ไม่ต้องสับสนกับ:สาขา Merkle บางส่วน (สาขาที่เชื่อมต่อใบไม้หนึ่งใบขึ้นไปกับราก), Merkle block (สาขา Merkle บางส่วนที่เชื่อมต่อธุรกรรมตั้งแต่บล็อกเดียวไปยังบล็อก Merkle root)

ส่วนหัวของข้อความ
ฟิลด์ส่วนหัวทั้งสี่นำหน้าข้อความทั้งหมดในเครือข่าย Bitcoin P2P

ค่าธรรมเนียมการถ่ายทอดขั้นต่ำ
ค่าธรรมเนียมรีเลย์
ค่าธรรมเนียมการทำธุรกรรมขั้นต่ำที่ธุรกรรมต้องจ่าย (หากไม่ใช่ธุรกรรมที่มีลำดับความสำคัญสูง) สำหรับโหนดแบบเต็มเพื่อถ่ายทอดธุรกรรมนั้นไปยังโหนดอื่น ไม่มีค่าธรรมเนียมการส่งต่อขั้นต่ำ—แต่ละโหนดจะเลือกนโยบายของตัวเอง

อย่าให้สับสนกับ:ค่าธรรมเนียมการทำธุรกรรม (ค่าธรรมเนียมการส่งต่อขั้นต่ำคือการตั้งค่านโยบายที่กรองธุรกรรมที่มีค่าธรรมเนียมการทำธุรกรรมต่ำเกินไป)

การขุด
คนขุดแร่
การขุดคือการสร้างบล็อค Bitcoin ที่ถูกต้อง ซึ่งต้องมีการพิสูจน์หลักฐานการทำงาน และผู้ขุดคืออุปกรณ์ที่ทำเหมืองหรือผู้ที่เป็นเจ้าของอุปกรณ์เหล่านั้น

มัลติซิก
Multisig เปล่า
สคริปต์ pubkey ที่จัดเตรียม pubkeys จำนวน nจำนวน และต้องการสคริปต์ลายเซ็นที่สอดคล้องกัน ให้mลายเซ็นจำนวนขั้นต่ำที่สอดคล้องกับ pubkey ที่ให้มา

อย่าให้สับสนกับ: P2SH multisig (สคริปต์ multisig ที่อยู่ภายใน P2SH), สคริปต์ขั้นสูงที่ต้องใช้หลายลายเซ็นโดยไม่ต้องใช้ OP_CHECKMULTISIG หรือ OP_CHECKMULTISIGVERIFY

nBits
เป้า
เป้าหมายคือเกณฑ์ด้านล่างซึ่งต้องมีแฮชส่วนหัวของบล็อกเพื่อให้บล็อกถูกต้อง และ nBits คือรูปแบบที่เข้ารหัสของเกณฑ์เป้าหมายตามที่ปรากฏในส่วนหัวของบล็อก

ไม่ต้องสับสนกับ:ความยาก (ตัวเลขที่วัดความยากในการค้นหาแฮชส่วนหัวเทียบกับความยากในการค้นหาแฮชส่วนหัวที่มีเป้าหมายที่ง่ายที่สุด)

โหนด
โหนดเต็ม
โหนดจดหมายเหตุ
โหนดที่ถูกตัดออก
เพียร์
คอมพิวเตอร์ที่เชื่อมต่อกับเครือข่าย Bitcoin

ระวังสับสนกับ:โหนดน้ำหนักเบา, โหนด SPV

ธุรกรรมข้อมูลว่าง
ธุรกรรม OP_RETURN
ธุรกรรมของผู้ให้บริการข้อมูล
ประเภทธุรกรรมที่ส่งต่อและขุดโดยค่าเริ่มต้นใน Bitcoin Core 0.9.0 และใหม่กว่าที่เพิ่มข้อมูลตามอำเภอใจไปยังสคริปต์ pubkey ที่ไม่สามารถพิสูจน์ได้ซึ่งโหนดเต็มไม่จำเป็นต้องเก็บไว้ในฐานข้อมูล UTXO

อย่าให้สับสนกับ: OP_RETURN (opcode ที่ใช้ในหนึ่งในเอาต์พุตในธุรกรรม OP_RETURN)

Opcode
opcode ผลักข้อมูล
opcode ที่ไม่ผลักข้อมูล
รหัสการทำงานจากภาษาสคริปต์ Bitcoin ที่ส่งข้อมูลหรือดำเนินการฟังก์ชันภายในสคริปต์ pubkey หรือสคริปต์ลายเซ็น

บล็อกเด็กกำพร้า
บล็อกที่โหนดในเครื่องยังไม่ได้ประมวลผลบล็อกหลัก ดังนั้นจึงยังไม่สามารถตรวจสอบได้อย่างสมบูรณ์

ระวังสับสนกับ:บล็อกเก่า

จุดจบ
โครงสร้างข้อมูลที่ใช้เพื่ออ้างถึงเอาต์พุตธุรกรรมเฉพาะ ซึ่งประกอบด้วย TXID 32 ไบต์และหมายเลขดัชนีเอาต์พุต 4 ไบต์ (vout)

อย่าสับสนกับ:เอาต์พุต (เอาต์พุตทั้งหมดจากธุรกรรม), TxOut (เหมือนกับเอาต์พุต)

เอาท์พุต
TxOut
เอาต์พุตในธุรกรรมที่ประกอบด้วยสองฟิลด์: ฟิลด์ค่าสำหรับการโอน satoshi เป็นศูนย์หรือมากกว่า และ pubkey script สำหรับระบุว่าต้องปฏิบัติตามเงื่อนไขใดบ้างสำหรับ satoshi เหล่านั้นจึงจะสามารถใช้ต่อไปได้

อย่าให้สับสนกับ: Outpoint (อ้างอิงถึงเอาท์พุตเฉพาะ)

ที่อยู่ P2PKH
เอาต์พุต P2PKH
ที่อยู่การชำระเงิน Bitcoin ที่ประกอบด้วยคีย์สาธารณะที่แฮช ทำให้ผู้ใช้สามารถสร้างสคริปต์ pubkey มาตรฐานที่จ่ายให้กับ PubKey Hash (P2PKH)

อย่าสับสนกับ:เอาต์พุต P2PK (เอาต์พุตที่จ่ายคีย์สาธารณะโดยตรง), ที่อยู่ P2SH, เอาต์พุต P2SH (ที่อยู่ที่ประกอบด้วยสคริปต์ที่แฮช และเอาต์พุตที่เกี่ยวข้อง)

ที่อยู่ P2SH
เอาต์พุต P2SH
ที่อยู่การชำระเงิน Bitcoin ที่ประกอบด้วยสคริปต์แฮช ทำให้ผู้ใช้สามารถสร้างสคริปต์ pubkey มาตรฐานที่ Pays To Script Hash (P2SH) สคริปต์สามารถเป็นสคริปต์ pubkey ที่ถูกต้องเกือบทุกชนิด

อย่าสับสนกับ:เอาต์พุต P2PK (เอาต์พุตที่จ่ายคีย์สาธารณะโดยตรง), ที่อยู่ P2PKH, เอาต์พุต P2PKH (ที่อยู่ที่ประกอบด้วย pubkey ที่แฮช และเอาต์พุตที่เกี่ยวข้อง), P2SH multisig (อินสแตนซ์เฉพาะของ P2SH ที่สคริปต์ใช้ รหัส multisig)

P2SH มัลติซิก
เอาต์พุต P2SH ที่สคริปต์แลกใช้หนึ่งใน opcodes แบบมัลติซิก จนถึง Bitcoin Core 0.10.0 สคริปต์หลายซิกของ P2SH เป็นธุรกรรมมาตรฐาน แต่สคริปต์ P2SH อื่น ๆ ส่วนใหญ่ไม่ใช่

อย่าให้สับสนกับ:สคริปต์ pubkey แบบ Multisig (เรียกอีกอย่างว่า “bare multisig”, สคริปต์ multisig เหล่านี้ไม่ใช้การห่อหุ้ม P2SH), P2SH (P2SH ทั่วไป ซึ่ง P2SH multisig เป็นอินสแตนซ์เฉพาะที่ใส่เคสพิเศษจนถึง Bitcoin Core 0.10 .0)

รหัสผู้ปกครอง
กุญแจสาธารณะของผู้ปกครอง
คีย์ส่วนตัวของผู้ปกครอง
ในกระเป๋าเงิน HD กุญแจที่ใช้เพื่อรับกุญแจลูก คีย์อาจเป็นคีย์ส่วนตัวหรือคีย์สาธารณะก็ได้ และการได้มาของคีย์อาจต้องใช้รหัสลูกโซ่ด้วย

อย่าให้สับสนกับ:กุญแจสาธารณะ (ได้มาจากคีย์ส่วนตัว ไม่ใช่คีย์หลัก)

โปรโตคอลการชำระเงิน
คำขอชำระเงิน
โปรโตคอลที่เลิกใช้ซึ่งกำหนดไว้ใน BIP70 (และ BIP อื่นๆ) ซึ่งช่วยให้ผู้ใช้จ่ายได้รับรายละเอียดการชำระเงินที่ลงนามจากผู้รับ

อย่าให้สับสนกับ:โปรโตคอลการชำระเงินแบบ IP-to-IP (โปรโตคอลที่ไม่ปลอดภัยและถูกยกเลิกรวมอยู่ใน Bitcoin เวอร์ชันก่อนหน้า)

คีย์ส่วนตัว
ส่วนส่วนตัวของคู่คีย์ซึ่งสามารถสร้างลายเซ็นที่บุคคลอื่นสามารถตรวจสอบได้โดยใช้กุญแจสาธารณะ

อย่าให้สับสนกับ:กุญแจสาธารณะ (ข้อมูลที่ได้จากคีย์ส่วนตัว), คีย์หลัก (คีย์ที่ใช้สร้างคีย์ย่อย ไม่จำเป็นต้องเป็นคีย์ส่วนตัว)

หลักฐานการทำงาน
เชลยศึก
แฮชที่ต่ำกว่าค่าเป้าหมายซึ่งโดยเฉลี่ยแล้วสามารถหาได้โดยใช้กำลังเดรัจฉานจำนวนหนึ่งเท่านั้น—ดังนั้นจึงเป็นการสาธิตการพิสูจน์การทำงาน

สคริปต์ Pubkey
ScriptPubKey
สคริปต์ที่รวมอยู่ในผลลัพธ์ที่กำหนดเงื่อนไขที่ต้องปฏิบัติตามเพื่อให้ใช้ satoshi เหล่านั้น ข้อมูลสำหรับการปฏิบัติตามเงื่อนไขสามารถระบุได้ในสคริปต์ลายเซ็น Pubkey Scripts เรียกว่า scriptPubKey ในโค้ด

อย่าให้สับสนกับ: Pubkey (กุญแจสาธารณะซึ่งสามารถใช้เป็นส่วนหนึ่งของสคริปต์ pubkey แต่ไม่มีกลไกการตรวจสอบสิทธิ์ที่ตั้งโปรแกรมได้), สคริปต์ลายเซ็น (สคริปต์ที่ให้ข้อมูลกับสคริปต์ pubkey)

กุญแจสาธารณะ
ส่วนสาธารณะของคู่คีย์ซึ่งสามารถใช้เพื่อตรวจสอบลายเซ็นที่ทำกับส่วนส่วนตัวของคู่คีย์

อย่าให้สับสนกับ:คีย์ส่วนตัว (ข้อมูลที่ได้มาซึ่งคีย์สาธารณะ), คีย์หลัก (คีย์ที่ใช้สร้างคีย์ย่อย ไม่จำเป็นต้องเป็นคีย์สาธารณะ)

แทนที่ด้วยค่าธรรมเนียม
RBF
เลือกใช้แทนด้วยค่าธรรมเนียม
การแทนที่เวอร์ชันหนึ่งของธุรกรรมที่ไม่ได้รับการยืนยันด้วยเวอร์ชันอื่นของธุรกรรมที่จ่ายค่าธรรมเนียมการทำธุรกรรมที่สูงขึ้น อาจใช้สัญญาณ BIP125

อย่าให้สับสนกับ:ลูกจ่ายให้ผู้ปกครอง, CPFP

แลกสคริปต์
RedeemScript
สคริปต์ที่ทำงานคล้ายกับสคริปต์ pubkey สำเนาหนึ่งชุดถูกแฮชเพื่อสร้างที่อยู่ P2SH (ใช้ในสคริปต์ pubkey จริง) และอีกสำเนาหนึ่งจะถูกใส่ไว้ในสคริปต์ลายเซ็นการใช้จ่ายเพื่อบังคับใช้เงื่อนไข

อย่าให้สับสนกับ:สคริปต์ลายเซ็น (สคริปต์ที่ให้ข้อมูลแก่สคริปต์ pubkey ซึ่งรวมถึงสคริปต์แลกรับในอินพุต P2SH)

ลงทะเบียน
โหมดทดสอบการถดถอย
สภาพแวดล้อมการทดสอบในพื้นที่ซึ่งนักพัฒนาสามารถสร้างบล็อกตามความต้องการสำหรับเหตุการณ์การทดสอบได้เกือบจะในทันที และสามารถสร้าง satoshi ส่วนตัวที่ไม่มีมูลค่าจริง

อย่าให้สับสนกับ: Testnet (สภาพแวดล้อมการทดสอบทั่วโลกซึ่งส่วนใหญ่เลียนแบบ mainnet)

คำสั่งไบต์ RPC
แฮชไดเจสต์ที่แสดงด้วยลำดับไบต์กลับด้าน ใช้ใน Bitcoin Core RPC ตัวสำรวจบล็อคจำนวนมาก และซอฟต์แวร์อื่นๆ

อย่าให้สับสนกับ:ลำดับไบต์ภายใน (แฮชไดเจสต์แสดงตามลำดับปกติ ใช้ในบล็อกต่อเนื่องและธุรกรรมต่อเนื่อง)

ลำดับหมายเลข
ส่วนหนึ่งของธุรกรรมทั้งหมด ตัวเลขที่มีจุดประสงค์เพื่อให้ธุรกรรมที่ล็อคเวลาที่ยังไม่ยืนยันได้รับการปรับปรุงก่อนที่จะสรุป; ไม่ได้ใช้ในขณะนี้ ยกเว้นการปิดใช้งานเวลาล็อกในธุรกรรม

อย่าสับสนกับ:หมายเลขดัชนีเอาต์พุต / vout (นี่คือหมายเลขดัชนี 0 ของเอาต์พุตภายในธุรกรรมที่ใช้โดยธุรกรรมในภายหลังเพื่ออ้างถึงเอาต์พุตเฉพาะนั้น)

บล็อกต่อเนื่อง
บล็อกที่สมบูรณ์ในรูปแบบไบนารี ซึ่งเป็นรูปแบบเดียวกับที่ใช้คำนวณขนาดไบต์ของบล็อกทั้งหมด มักแสดงโดยใช้เลขฐานสิบหก

ธุรกรรมต่อเนื่อง
ธุรกรรมดิบ
ทำธุรกรรมให้เสร็จสมบูรณ์ในรูปแบบไบนารี มักแสดงโดยใช้เลขฐานสิบหก บางครั้งเรียกว่ารูปแบบ raw เนื่องจากคำสั่ง Bitcoin Core ต่างๆ ที่มีคำว่า "raw" ในชื่อ

SIGHASH_ALL
ประเภทแฮชลายเซ็นเริ่มต้นซึ่งลงนามในธุรกรรมทั้งหมด ยกเว้นสคริปต์ลายเซ็นใดๆ เพื่อป้องกันการแก้ไขส่วนที่เซ็นชื่อ

SIGHASH_ANYONECANPAY
ประเภทแฮชลายเซ็นที่ลงนามเฉพาะอินพุตปัจจุบัน

อย่าให้สับสนกับ: SIGHASH_SINGLE (ซึ่งลงนามอินพุตนี้ เอาต์พุตที่เกี่ยวข้อง และอินพุตอื่นๆ บางส่วน)

SIGHASH_NONE
ประเภทแฮชลายเซ็นที่ลงชื่อเฉพาะอินพุต ทำให้ทุกคนสามารถเปลี่ยนเอาต์พุตได้ตามต้องการ

SIGHASH_SINGLE
ประเภทแฮชลายเซ็นที่เซ็นเอาต์พุตที่สอดคล้องกับอินพุตนี้ (อันที่มีค่าดัชนีเดียวกัน) อินพุตนี้ และอินพุตอื่นๆ บางส่วน อนุญาตให้แก้ไขเอาต์พุตอื่นและหมายเลขลำดับของอินพุตอื่น

อย่าให้สับสนกับ: SIGHASH_ANYONECANPAY (แฟล็กเป็นประเภทแฮชลายเซ็นที่ลงนามอินพุตเดียวนี้เท่านั้น)

ลายเซ็น
ค่าที่เกี่ยวข้องกับกุญแจสาธารณะซึ่งสร้างได้อย่างเหมาะสมโดยผู้ที่มีกุญแจส่วนตัวที่สร้างกุญแจสาธารณะนั้น ใช้ใน Bitcoin เพื่ออนุมัติการใช้จ่าย satoshi ที่ส่งไปยังคีย์สาธารณะก่อนหน้านี้

แฮชลายเซ็น
ซิกฮาช
การตั้งค่าสถานะลายเซ็น Bitcoin ที่ระบุส่วนใดของธุรกรรมที่ลายเซ็นลงนาม (ค่าเริ่มต้นคือ SIGHASH_ALL) อาจมีการแก้ไขส่วนที่ไม่ได้ลงนามของธุรกรรม

อย่าให้สับสนกับ:แฮชที่ลงนาม (แฮชของข้อมูลที่จะลงนาม) ความสามารถในการเปลี่ยนแปลงของธุรกรรม / การเปลี่ยนแปลงของธุรกรรม (แม้ว่าแฟล็ก sighash ที่ไม่ใช่ค่าเริ่มต้นจะอนุญาตให้มีความอ่อนไหวที่เป็นตัวเลือก ความอ่อนไหวประกอบด้วยวิธีการใดๆ ที่ธุรกรรมอาจกลายพันธุ์ได้)

ลายมือชื่อ
ScriptSig
ข้อมูลที่สร้างโดยผู้ใช้จ่ายซึ่งมักใช้เป็นตัวแปรเพื่อตอบสนองสคริปต์ pubkey สคริปต์ลายเซ็นเรียกว่า scriptSig ในรหัส

อย่าให้สับสนกับ:ลายเซ็น ECDSA (ลายเซ็น ซึ่งสามารถใช้เป็นส่วนหนึ่งของสคริปต์ pubkey นอกเหนือจากข้อมูลอื่น ๆ ได้)

SPV
การยืนยันการชำระเงินแบบง่าย
ลูกค้าน้ำหนักเบา
ลูกค้าแบบบาง
วิธีการตรวจสอบว่าธุรกรรมใดรวมอยู่ในบล็อกโดยไม่ต้องดาวน์โหลดทั้งบล็อก วิธีนี้ใช้โดยลูกค้า Bitcoin ที่มีน้ำหนักเบา

ส้อมนิ่ม
softfork คือการเปลี่ยนแปลงโปรโตคอล bitcoin ซึ่งบล็อก/ธุรกรรมที่ถูกต้องก่อนหน้านี้เท่านั้นที่ทำให้ใช้งานไม่ได้ เนื่องจากโหนดเก่าจะรับรู้ว่าบล็อกใหม่นั้นถูกต้อง ซอฟต์ฟอร์กจึงเข้ากันได้แบบย้อนหลัง

เพื่อไม่ให้สับสนกับ:ส้อม (ส้อมปกติที่โหนดทั้งหมดปฏิบัติตามกฎฉันทามติเดียวกัน ดังนั้นส้อมจะได้รับการแก้ไขเมื่อห่วงโซ่หนึ่งมีหลักฐานการทำงานมากกว่าที่อื่น), ส้อมแข็ง (ความแตกต่างถาวรในบล็อกเชนที่เกิดจากไม่ใช่ - โหนดที่อัปเกรดแล้วไม่เป็นไปตามกฎฉันทามติใหม่), Software fork (เมื่อนักพัฒนาซอฟต์แวร์หนึ่งคนหรือมากกว่านั้นพัฒนา codebase แยกต่างหากจากผู้พัฒนารายอื่นอย่างถาวร), Git fork (เมื่อนักพัฒนาอย่างน้อยหนึ่งรายพัฒนา codebase แยกจากผู้พัฒนารายอื่นเป็นการชั่วคราว

บล็อกเก่า
บล็อกที่ขุดได้สำเร็จแต่ไม่รวมอยู่ในบล็อกเชนที่ดีที่สุดในปัจจุบัน น่าจะเป็นเพราะบล็อกอื่นที่ความสูงเท่ากันมีการขยายสายโซ่ก่อน

อย่าสับสนกับ:บล็อกเด็กกำพร้า (บล็อกที่มีฟิลด์แฮชก่อนหน้า (หลัก) ชี้ไปยังบล็อกที่ไม่รู้จัก หมายความว่าเด็กกำพร้าไม่สามารถตรวจสอบได้)

ธุรกรรมมาตรฐาน
ธุรกรรมที่ผ่านการทดสอบ IsStandard() และ IsStandardTx() ของ Bitcoin Core เฉพาะธุรกรรมมาตรฐานเท่านั้นที่จะถูกขุดหรือเผยแพร่โดยเพื่อนร่วมงานที่ใช้งานซอฟต์แวร์ Bitcoin Core ที่เป็นค่าเริ่มต้น

เริ่มสตริง
เวทมนตร์เครือข่าย
สี่ไบต์ที่กำหนดซึ่งเริ่มต้นทุกข้อความในโปรโตคอล Bitcoin P2P เพื่อให้สามารถค้นหาข้อความถัดไปได้

Testnet
สภาพแวดล้อมการทดสอบระดับโลกที่นักพัฒนาสามารถรับและใช้ satoshi ที่ไม่มีมูลค่าจริงบนเครือข่ายที่คล้ายกับ Bitcoin mainnet

อย่าให้สับสนกับ: Regtest (สภาพแวดล้อมการทดสอบในเครื่องที่นักพัฒนาสามารถควบคุมการสร้างบล็อกได้)

โทเค็น
โทเค็นเป็นสินทรัพย์ดิจิทัลที่ตั้งโปรแกรมได้ซึ่งมีฐานรหัสของตัวเองซึ่งอยู่บนบล็อกเชนที่มีอยู่แล้ว โทเค็นถูกใช้เพื่อช่วยอำนวยความสะดวกในการสร้างแอปพลิเคชันที่กระจายอำนาจ

อย่าให้สับสนกับ: Bitcoins, Satoshis, โทเค็นความปลอดภัย, นิกาย

ค่าธรรมเนียมการทำธุรกรรม
ค่าธรรมเนียมคนงานเหมือง
จำนวนเงินคงเหลือเมื่อมูลค่าของผลลัพธ์ทั้งหมดในธุรกรรมถูกลบออกจากอินพุตทั้งหมดในธุรกรรม ค่าธรรมเนียมจะจ่ายให้กับผู้ขุดที่รวมธุรกรรมนั้นไว้ในบล็อก

อย่าให้สับสนกับ:ค่าธรรมเนียมการส่งต่อขั้นต่ำ (ค่าธรรมเนียมต่ำสุดที่ธุรกรรมต้องจ่ายจึงจะได้รับการยอมรับในพูลหน่วยความจำและส่งต่อโดยโหนด Bitcoin Core)

Txid
ตัวระบุที่ใช้ในการระบุธุรกรรมเฉพาะ โดยเฉพาะแฮช sha256d ของธุรกรรม

อย่าให้สับสนกับ: Outpoint (การรวมกันของ txid กับ vout ที่ใช้ในการระบุเอาต์พุตเฉพาะ)

ซอฟต์ฟอร์คที่เปิดใช้งานโดยผู้ใช้
UASF
Soft Fork เปิดใช้งานโดยวันธงหรือการบังคับใช้โหนดแทนการส่งสัญญาณของคนงานเหมือง

อย่าให้สับสนกับ: Miner Activated Soft Fork (ซอฟต์ฟอร์กที่เปิดใช้งานผ่านการส่งสัญญาณของคนงานเหมือง), Fork (ส้อมปกติที่โหนดทั้งหมดปฏิบัติตามกฎฉันทามติเดียวกัน ดังนั้นส้อมจะได้รับการแก้ไขเมื่อห่วงโซ่หนึ่งมีหลักฐานการทำงานมากกว่าอีกอันหนึ่ง) , ฮาร์ดฟอร์ก (ไดเวอร์เจนซ์ถาวรในบล็อกเชนที่เกิดจากโหนดที่ไม่ได้อัปเกรดไม่ปฏิบัติตามกฎฉันทามติใหม่), ซอฟต์ฟอร์ก (ความแตกต่างชั่วคราวในบล็อกเชนที่เกิดจากโหนดที่ไม่ได้อัปเกรดไม่ปฏิบัติตามกฎฉันทามติใหม่), ส้อมซอฟต์แวร์ ( เมื่อนักพัฒนาอย่างน้อยหนึ่งคนพัฒนา codebase แยกจากผู้พัฒนารายอื่นอย่างถาวร), Git fork (เมื่อนักพัฒนาอย่างน้อยหนึ่งคนพัฒนา codebase แยกจากผู้พัฒนารายอื่นชั่วคราว

UTXO
Unspent Transaction Output (UTXO) ที่สามารถใช้เป็นอินพุตในธุรกรรมใหม่ได้

ไม่ต้องสับสนกับ:เอาท์พุต (เอาท์พุตใด ๆ ไม่ว่าจะใช้แล้วหรือไม่ก็ตาม เอาท์พุตเป็นซูเปอร์เซ็ตของ UTXO)

กระเป๋าสตางค์
ซอฟต์แวร์ที่เก็บคีย์ส่วนตัวและตรวจสอบบล็อกเชน (บางครั้งเป็นไคลเอนต์ของเซิร์ฟเวอร์ที่ทำการประมวลผล) เพื่อให้ผู้ใช้ใช้จ่ายและรับ satoshi

อย่าให้สับสนกับ: HD wallet (โปรโตคอลที่อนุญาตให้สร้างคีย์ของ wallet ทั้งหมดจาก seed เดียว)

WIF
รูปแบบการนำเข้ากระเป๋าสตางค์
รูปแบบการแลกเปลี่ยนข้อมูลที่ออกแบบมาเพื่อให้สามารถส่งออกและนำเข้าไพรเวตคีย์เดียวพร้อมแฟล็กที่ระบุว่าใช้คีย์สาธารณะที่ถูกบีบอัดหรือไม่

อย่าให้สับสนกับ:คีย์ส่วนตัวแบบขยาย (ซึ่งอนุญาตให้นำเข้าลำดับชั้นของคีย์ส่วนตัว)

ที่อยู่สำหรับนาฬิกาเท่านั้น
ที่อยู่หรือสคริปต์ pubkey ที่จัดเก็บไว้ในกระเป๋าเงินโดยไม่มีคีย์ส่วนตัวที่สอดคล้องกัน ทำให้กระเป๋าเงินดูผลลัพธ์ได้ แต่ไม่ได้ใช้

Bitcoin URI
URI ที่อนุญาตให้ผู้รับเข้ารหัสรายละเอียดการชำระเงิน ดังนั้นผู้ใช้จ่ายจึงไม่ต้องป้อนที่อยู่และรายละเอียดอื่นๆ ด้วยตนเอง

ห่วงโซ่ใบรับรอง
ห่วงโซ่ของใบรับรองที่เชื่อมต่อใบรับรองลีฟของแต่ละบุคคลกับใบรับรองรูทของผู้ออกใบรับรอง

ความสูงของบล็อก Coinbase
ความสูงของบล็อกปัจจุบันถูกเข้ารหัสเป็นไบต์แรกของฟิลด์ coinbase

เฟียต
สกุลเงินประจำชาติเช่นดอลลาร์หรือยูโร

ใบรับรองระดับกลาง
ใบรับรองผู้ออกใบรับรองระดับกลางซึ่งช่วยเชื่อมต่อใบรับรองลีฟ (ผู้รับ) กับผู้ออกใบรับรองรูท

ดัชนีคีย์
หมายเลขดัชนีที่ใช้ในสูตรกระเป๋าสตางค์ HD เพื่อสร้างคีย์ย่อยจากคีย์หลัก

คู่กุญแจ
คีย์ส่วนตัวและคีย์สาธารณะที่ได้รับ

ฉลาก
พารามิเตอร์ป้ายกำกับของ bitcoin: URI ซึ่งให้ชื่อผู้รับแก่ผู้ใช้จ่าย (ไม่ผ่านการตรวจสอบสิทธิ์)

ใบประกาศนียบัตร
โหนดปลายในสายใบรับรอง ในโปรโตคอลการชำระเงิน มันคือใบรับรองที่เป็นของผู้รับ satoshi

ผสาน
การใช้จ่ายในธุรกรรมเดียวกัน ผลลัพธ์หลายรายการซึ่งสามารถตรวจสอบย้อนกลับไปยังผู้ใช้จ่ายรายก่อนๆ กันได้ ทำให้ข้อมูลรั่วไหลเกี่ยวกับจำนวน satoshi ที่คุณควบคุม

ผสานการหลีกเลี่ยง
กลยุทธ์ในการเลือกเอาท์พุตที่จะใช้เพื่อหลีกเลี่ยงการรวมเอาต์พุตที่มีประวัติต่างกันซึ่งอาจทำให้ข้อมูลส่วนตัวรั่วไหลได้

ข้อความ
พารามิเตอร์ของ bitcoin: URI ที่อนุญาตให้ผู้รับเลือกระบุข้อความไปยังผู้ใช้จ่าย

ช่องทางไมโครเพย์เมนต์
term-micropayment-channel (สัญญา-คู่มือ) ( เป้าหมายเดิม )

OP เช็คมุลติซิก
Opcode ที่คืนค่า จริง หากลายเซ็นที่ให้ไว้อย่างน้อยหนึ่งรายการ (m) ลงนามในส่วนที่ถูกต้องของธุรกรรมและจับคู่กุญแจสาธารณะ (n) ที่ให้มาอย่างน้อยหนึ่งรายการ

ดัชนีผลผลิต
ดัชนีลำดับของเอาต์พุตในธุรกรรมเดียวเริ่มต้นจาก 0

PKI
โครงสร้างพื้นฐานกุญแจสาธารณะ; มักจะหมายถึงการระบุระบบใบรับรอง X.509 ที่ใช้สำหรับ HTTP Secure (https)

ฟังก์ชั่นจุด
ฟังก์ชัน ECDSA ใช้สร้างคีย์สาธารณะจากคีย์ส่วนตัว

จำนวน PP
ส่วนหนึ่งของส่วนผลลัพธ์ของส่วนรายละเอียดการชำระเงินของโปรโตคอลการชำระเงินที่ผู้รับสามารถระบุจำนวน satoshi ที่ต้องการจ่ายให้กับสคริปต์ pubkey เฉพาะได้

PP หมดอายุ
ฟิลด์หมดอายุของ PaymentDetails ซึ่งผู้รับแจ้งผู้ใช้จ่ายเมื่อ PaymentDetails หมดอายุ

บันทึก PP
ช่องบันทึกช่วยจำของ PaymentDetails, Payment และ PaymentACK ซึ่งอนุญาตให้ผู้ใช้จ่ายและผู้รับส่งบันทึกช่วยจำถึงกัน

ข้อมูลผู้ค้า PP
ส่วน Merchant_data ของ PaymentDetails และ Payment ซึ่งอนุญาตให้ผู้รับส่งข้อมูลตามอำเภอใจไปยังผู้ใช้จ่ายใน PaymentDetails และรับกลับใน Payments

ข้อมูล PP pki
ฟิลด์ pki_data ของ PaymentRequest ซึ่งให้รายละเอียด เช่น ใบรับรองที่จำเป็นในการตรวจสอบคำขอ

PP pki ประเภท
ฟิลด์ PKI ของ PaymentRequest ซึ่งบอกผู้ใช้ถึงวิธีการตรวจสอบคำขอนี้ว่ามาจากผู้รับเฉพาะ

สคริปต์ PP
ฟิลด์สคริปต์ของ PaymentDetails โดยที่ผู้รับแจ้งผู้ใช้จ่ายว่าต้องจ่ายเงินสคริปต์ pubkey ใด

แฮชส่วนหัวของบล็อกก่อนหน้า
ฟิลด์ในส่วนหัวของบล็อกที่มีแฮช SHA256(SHA256()) ของส่วนหัวของบล็อกก่อนหน้า

พารามิเตอร์ R
พารามิเตอร์คำขอชำระเงินใน bitcoin: URI

ใบเสร็จ
ใบเสร็จรับเงินที่ตรวจสอบได้ด้วยการเข้ารหัสซึ่งสร้างขึ้นโดยใช้ส่วนของคำขอชำระเงินและธุรกรรมที่ยืนยันแล้ว

ใบรับรองหลัก
ใบรับรองที่เป็นของผู้ออกใบรับรอง (CA)

ลายเซ็น SSL
ลายเซ็นที่สร้างและรับรู้โดยการใช้งาน SSL หลักๆ เช่น OpenSSL

รีเลย์บล็อกมาตรฐาน
วิธีการถ่ายทอดบล็อกปกติ: ประกาศบล็อกด้วยข้อความ inv และรอการตอบกลับ

หมายเลขรุ่นธุรกรรม
หมายเลขเวอร์ชันนำหน้าธุรกรรมเพื่อให้สามารถอัปเกรดได้

ที่อยู่ที่ไม่ซ้ำ
ที่อยู่ที่ใช้เพียงครั้งเดียวเพื่อปกป้องความเป็นส่วนตัวและเพิ่มความปลอดภัย

บล็อกที่ไม่พึงประสงค์ผลักดัน
เมื่อคนขุดแร่ส่งข้อความบล็อกโดยไม่ส่งข้อความ inv ก่อน

URI คิวอาร์โค้ด
รหัส QR ที่มี bitcoin: URI

บล็อก V2
บล็อก Bitcoin เวอร์ชันปัจจุบัน

x509ใบรับรอง
term-x509certificates (ตัวอย่างนักพัฒนา) ( เป้าหมายเดิม )